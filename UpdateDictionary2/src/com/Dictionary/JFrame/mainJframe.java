/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.Dictionary.JFrame;

import com.rmtheis.yandtran.translate.Translate;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import com.sun.speech.freetts.*;
import java.awt.Image;
import java.io.BufferedWriter;
import java.io.FileWriter;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import oracle.jrockit.jfr.VMJFR;


/**
 *
 * @author Khac Ngoc
 */
public class mainJframe extends javax.swing.JFrame {

    /**
     * Creates new form mainJframe
     */
    public mainJframe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtInput = new javax.swing.JTextField();
        btnTranslate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listWords = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtResult = new javax.swing.JTextPane();
        btnVoice = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mniAdd = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnitExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mnitPro = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setForeground(new java.awt.Color(102, 102, 255));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtInput.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        txtInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtInputKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInputKeyTyped(evt);
            }
        });

        btnTranslate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Dictionary/JFrame/search.png"))); // NOI18N
        btnTranslate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTranslateActionPerformed(evt);
            }
        });

        listWords.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listWordsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listWords);

        txtResult.setContentType("text/html"); // NOI18N
        txtResult.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        txtResult.setFocusable(false);
        jScrollPane2.setViewportView(txtResult);

        btnVoice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Dictionary/JFrame/voice.png"))); // NOI18N
        btnVoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoiceActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Dictionary/JFrame/if_Cancel_132620.png"))); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Dictionary/JFrame/if_Notes_132689.png"))); // NOI18N
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTranslate, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit)
                        .addGap(18, 18, 18)
                        .addComponent(btnVoice)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnTranslate, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addComponent(txtInput))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnVoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        jMenuBar1.setForeground(new java.awt.Color(51, 255, 102));

        jMenu1.setText("Tool");

        mniAdd.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        mniAdd.setText("Add Dictionary");
        mniAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAddActionPerformed(evt);
            }
        });
        jMenu1.add(mniAdd);
        jMenu1.add(jSeparator1);

        mnitExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        mnitExit.setText("Exit");
        mnitExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnitExitActionPerformed(evt);
            }
        });
        jMenu1.add(mnitExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        mnitPro.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        mnitPro.setText("Property");
        mnitPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnitProActionPerformed(evt);
            }
        });
        jMenu2.add(mnitPro);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private ArrayList<Data> arr; // lưu dữ liệu từ của file gốc.
    private ArrayList<Data> newArr;// lưu các dữ liệu từ trong file thêm vào.
    private DefaultListModel<String> list;// lưu các giá trị cửa file gốc.
    private DefaultListModel<String> newList;// lưu các giá trị từ tìm kiếm.
    private void mnitProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitProActionPerformed
        // TODO add your handling code here:
        String pro= "Nguyễn Ngọc Minh"+"\n"+"Nguyễn Khắc Ngọc";
        JOptionPane.showMessageDialog(null, pro);
    }//GEN-LAST:event_mnitProActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        arr=new ArrayList<Data>();
        newArr= new ArrayList<Data>();
        list= new DefaultListModel<>();
        listWords.setModel(list);
        Data obj;
        try {
            // đọc file cố định
            File fileWords = new File("E:\\Java\\UpdateDictionary2\\E_V.html");
            FileReader fr= new FileReader(fileWords);
            BufferedReader br= new BufferedReader(fr);
            String line, text, dict;
            while((line=br.readLine())!=null)
            {
                int k=line.indexOf("<");
                text= line.substring(0, k);
                dict=line.substring(k);
                obj = new Data(text, dict);
                arr.add(obj);
            }
            br.close();
            fr.close();
            // đọc file từ đã thêm vào.
            File addWords = new File("E:\\Java\\UpdateDictionary2\\AddDictionary.txt");
            FileReader fr1= new FileReader(addWords);
            BufferedReader br1= new BufferedReader(fr1);
            while((line=br1.readLine())!=null)
            {
                if(line.trim().compareTo("")!=0){
                int k=line.indexOf("<");
                text= line.substring(0, k);
                dict=line.substring(k);
                obj = new Data(text, dict);
                newArr.add(obj);
                }
            }
            br1.close();
            fr1.close();
            Collections.sort(arr, new Comparator<Data>() {
                @Override
                public int compare(Data t, Data t1) {
                    return t.getText().trim().compareTo(t1.getText());
                }
            });
            for(Data a: arr)
            {
                list.addElement(a.getText());
            }
            for(Data a: newArr)
            {
                list.addElement(a.getText());
            }
                    
        } catch (FileNotFoundException ex) {
            Logger.getLogger(mainJframe.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(mainJframe.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_formWindowOpened

    private void listWordsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listWordsValueChanged
        // TODO add your handling code here:
        if(!listWords.isSelectionEmpty())
        {
            String index= listWords.getSelectedValue(); // Lấy giá trị bạn đang chọn trong list;
            for(Data a: arr)
            {
                if(a.getText().trim().compareTo(index)==0)
                {
                    txtResult.setText(a.getDict().trim());
                }
            }
            for(Data a: newArr)
            {
                if(a.getText().trim().compareTo(index)==0)
                {
                    txtResult.setText(a.getDict().trim());
                }
            }
        }
    }//GEN-LAST:event_listWordsValueChanged

    private void txtInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInputKeyTyped
       
    }//GEN-LAST:event_txtInputKeyTyped

    private void mniAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAddActionPerformed
        // TODO add your handling code here:
        AddFrame ad= new AddFrame("Add");
        ad.showFrame();
    }//GEN-LAST:event_mniAddActionPerformed

    private void btnTranslateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTranslateActionPerformed
        // TODO add your handling code here:
        String t= txtInput.getText();
        if(t.compareTo("")!=0){
            Translate translator= new Translate();
            String translation= translator.tran(t);
            txtResult.setText(translation);
        }
    }//GEN-LAST:event_btnTranslateActionPerformed

    private static final String READER= "kevin16";
    private void btnVoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoiceActionPerformed
        // TODO add your handling code here:
        Voice voice;
        VoiceManager vm= VoiceManager.getInstance();
        voice= vm.getVoice(READER);
        
        voice.allocate();
        
        String index= listWords.getSelectedValue();
        try {
            if(newList.isEmpty())
            {
                voice.speak(txtInput.getText().trim());
            }
            else
               voice.speak(index);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnVoiceActionPerformed

    private void txtInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInputKeyReleased
        // TODO add your handling code here:
        //Nhận sự kiện khi mình nhả phím luôn.
        String input= txtInput.getText();
        input= input.toLowerCase();
        if(input.compareTo("")==0)
        {
            listWords.setModel(list);
            listWords.setSelectedIndex(0);
            return;
        }
        newList= new DefaultListModel<>();
        for(int i=0;i<arr.size();i++)
        {
            String val= arr.get(i).getText();
            val= val.toLowerCase();
            if(val.startsWith(input))
            {
                newList.addElement(arr.get(i).getText());
            }
        }
        for(int i=0;i<newArr.size();i++)
        {
            String val= newArr.get(i).getText();
            val= val.toLowerCase();
            if(val.startsWith(input))
            {
                newList.addElement(newArr.get(i).getText());
            }
        }
        if(newList.isEmpty())
        {
            listWords.setModel(newList);
            txtResult.setText("Từ bạn tìm không thấy trong từ điển của chúng tôi<BR>Vui lòng nhấn vào Translate để tìm kiếm online!!!<BR>Thank You <3.");
            return;
        }
        listWords.setModel(newList);
        listWords.setSelectedIndex(0);
    }//GEN-LAST:event_txtInputKeyReleased

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        String deleteWord= listWords.getSelectedValue();  
        try {
            File addWords1= new File("E:\\Java\\UpdateDictionary2\\AddDictionary.txt");
            FileWriter fw2= new FileWriter(addWords1);
            BufferedWriter bw2= new BufferedWriter(fw2);
            for(Data a: newArr)
            {
             if(a.getText().trim().compareTo(deleteWord)!=0)
             {
                 String ad= a.getText()+a.getDict();
                 bw2.write(ad);
                 bw2.newLine();
             }
            }
            bw2.close();
            fw2.close();
            list.remove(listWords.getSelectedIndex());
            txtResult.setText("");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        String deleteWord= listWords.getSelectedValue();  
        try {
            File addWords1= new File("E:\\Java\\UpdateDictionary2\\AddDictionary.txt");
            FileWriter fw2= new FileWriter(addWords1);
            BufferedWriter bw2= new BufferedWriter(fw2);
            for(Data a: newArr)
            {
             if(a.getText().trim().compareTo(deleteWord)!=0)
             {
                 String ad= a.getText()+a.getDict();
                 bw2.write(ad);
                 bw2.newLine();
             }
            }
            bw2.close();
            fw2.close();
            list.remove(listWords.getSelectedIndex());
            txtResult.setText("");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        AddFrame a= new AddFrame("Edit");
        a.showFrame();
    }//GEN-LAST:event_btnEditActionPerformed

    private void mnitExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_mnitExitActionPerformed

    /**
     * @param args the command line arguments
     */
        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                mainJframe main= new mainJframe();
                //Image icon= new ImageIcon(getClass().getResource("E:\\Java\\DictionaryApp\\Picture\\NKNFullHD.png"));
                //main.setIconImage(icon);
                main.setLocationRelativeTo(null);
                main.setResizable(false);
                main.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnTranslate;
    private javax.swing.JButton btnVoice;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JList<String> listWords;
    private javax.swing.JMenuItem mniAdd;
    private javax.swing.JMenuItem mnitExit;
    private javax.swing.JMenuItem mnitPro;
    private javax.swing.JTextField txtInput;
    private javax.swing.JTextPane txtResult;
    // End of variables declaration//GEN-END:variables
}
